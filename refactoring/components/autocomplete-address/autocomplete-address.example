const googleApi = 'fill_your_google_maps_api_key';

class Form extends React.Component {
  render() {
    return (
      <Formik
        initialValues={{ address: '' }}
        onSubmit={values => console.log('onSubmit', values)}
        validationSchema={object().shape({
          address: string('Address is Required').required(),
        })}
        render={({ handleChange, handleBlur, handleSubmit, touched, errors, values, isValid }) => {
          return (
            <form onSubmit={handleSubmit}>
              <Spacing left>
                <div>
                  <Spacing bottom>
                    <div>
                      <AutocompleteAddress
                        name="address"
                        googleMapsApiKey={googleApi}
                        handleSuggestionSelection={suggestions =>
                          console.log('handleSuggestionSelection', suggestions)
                        }
                        label="Address Line"
                        value={values.address}
                        onChange={a => {
                          handleChange(a);
                          console.log('onChange', a);
                        }}
                        onBlur={e => {
                          handleBlur(e);
                          console.log('onBlur', e);
                        }}
                        onFocus={e => console.lo('onFocus', e)}
                        touched={touched.address}
                        error={errors.address}
                        filterInput={suggestion => {
                          console.log('filterInput', suggestion);
                          return suggestion.description;
                        }}
                        callbackOnFetch={e => console.log('callbackOnFetch', e)}
                      />
                    </div>
                  </Spacing>
                  <Button disabled={!isValid} text="submit" type="primary" submit />
                </div>
              </Spacing>
            </form>
          );
        }}
      />
    );
  }
}

ReactDOM.render(<Form />, mountNode);
